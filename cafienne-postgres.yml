# This compose will work with docker 1.13.1+
#
# To run, call:
#   $ docker-compose -f cafienne-postgres.yml up
#
version: '3.1'
services:
  # supporting containers
  mailcatcher:
    image: schickling/mailcatcher:latest
    labels:
      component: mta
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://mailcatcher:1080"]
      interval: 10s
      timeout: 5s
      retries: 6
    networks:
      - dev
    expose:
      - 1025
      - 1080
    ports:
      - "1080:1080"
    hostname: mailcatcher
    container_name: mailcatcher

  idp:
    image: quay.io/dexidp/dex:v2.23.0
    command: ["serve", "/dex-setup.yaml"]
    networks:
      - dev
    expose:
      - 5556
      - 5558
    ports:
      - "5556:5556"
      - "5558:5558"
    hostname: idp
    container_name: idp
    volumes:
      - ./src/dex/conf/dex-setup.yaml:/dex-setup.yaml
      - ./src/dex/web/:/web/
      - ./run/dex/:/var/dex/

  cafienne-event-db:
    image: postgres:12.1-alpine
    networks:
      - dev
    expose:
      - 5432
    ports:
      - "5431:5432"
    hostname: cafienne-event-db
    container_name: cafienne-event-db
    environment:
      POSTGRES_USER: postgresuser
      POSTGRES_PASSWORD: mysecret
      POSTGRES_DB: cafienne-eventstore
    volumes:
      - postgres-event-db-data:/var/lib/postgresql/data
           
  cafienne-query-db:
    image: postgres:12.1-alpine
    networks:
      - dev
    expose:
      - 5432
    ports:
      - "5430:5432"
    hostname: cafienne-query-db
    container_name: cafienne-query-db
    environment:
      POSTGRES_USER: postgresuser
      POSTGRES_PASSWORD: mysecret
      POSTGRES_DB: cafienne-query
    volumes:
      - postgres-query-db-data:/var/lib/postgresql/data

  cafienne-ide:
    image: cafienne/ide:latest
    labels: 
      component: cafienne-ide
    networks:
      - dev
    expose:
      - 2081
    ports:
      - "2081:2081"
    hostname: ide
    container_name: ide
    environment:
      BACKEND_API_URL: ${BACKEND_API_URL:-http://cafienne:2027}
    volumes:
      - ./target/definitions:/usr/src/app/repository_deploy
      - ./src/definitions:/usr/src/app/repository   
    depends_on:
      - cafienne

  generic-ui:
    image: cafienne/generic-ui:latest
    labels: 
      component: generic-ui
    networks: 
      - dev
    ports:
      - "28080:80"
    hostname: generic-ui
    container_name: generic-ui
    environment:
      NODE_ENV: production
      BACKEND_OIDC_HOST: ${BACKEND_OIDC_HOST:-generic-ui}
      BACKEND_OIDC_PORT: ${BACKEND_OIDC_PORT:-28080}
      BACKEND_DEX_HOST: ${BACKEND_DEX_HOST:-idp}
      BACKEND_DEX_PORT: ${BACKEND_DEX_PORT:-5556}
      BACKEND_API_HOST: ${BACKEND_API_HOST:-cafienne}
      BACKEND_API_PORT: ${BACKEND_API_PORT:-2027}
    healthcheck:
      test: ["CMD", "curl", "-sS", "-o", "/dev/null", "http://generic-ui/index.html"]
      interval: 10s
      timeout: 5s
      retries: 6
    depends_on:
      - cafienne
      - idp

  cafienne-ui:
    image: cafienne/cafienne-ui:latest
    labels:
      component: cafienne-ui
    networks:
      - dev
    ports:
      - "3317:80"
    expose:
      - 3317
    hostname: cafienne-ui
    container_name: cafienne-ui
    environment:
      OIDC_URI: ${OIDC_URI:-http://localhost:5556/dex}
      OIDC_CLIENT_ID: ${OIDC_CLIENT_ID:-cafienne-ui}
      CAFIENNE_URI: ${CAFIENNE_URI:-http://localhost:2027}
    depends_on:
      - cafienne
      - idp

  cafienne:
    image: cafienne/engine:latest
    labels:
      component: cafienne-engine    
    networks: 
      - dev
    expose:
      - 2027
    ports:
      - "2027:2027"
    hostname: cafienne
    container_name: cafienne
    healthcheck:
      test: ["CMD", "curl", "-sS", "-o", "/dev/null", "http://cafienne:2027/status"]
      interval: 10s
      timeout: 5s
      retries: 6
    environment:
      EVENT_DB_URL: ${EVENT_DB_URL:-jdbc:postgresql://cafienne-event-db:5432/cafienne-eventstore?reWriteBatchedInserts=true}    
      EVENT_DB_PROFILE: ${EVENT_DB_PROFILE:-slick.jdbc.PostgresProfile$}
      EVENT_DB_DRIVER: ${EVENT_DB_DRIVER:-org.postgresql.Driver}
      EVENT_DB_USER: ${EVENT_DB_USER:-postgresuser}
      EVENT_DB_PASSWORD: ${EVENT_DB_PASSWORD:-mysecret}
      PROJECTION_DB_PROFILE: ${PROJECTION_DB_PROFILE:-slick.jdbc.PostgresProfile$}
      PROJECTION_DB_DRIVER: ${PROJECTION_DB_DRIVER:-org.postgresql.Driver}
      PROJECTION_DB_USER: ${PROJECTION_DB_USER:-postgresuser}
      PROJECTION_DB_PASSWORD: ${PROJECTION_DB_PASSWORD:-mysecret}
      PROJECTION_DB_URL: ${PROJECTION_DB_URL:-jdbc:postgresql://cafienne-query-db:5432/cafienne-query?reWriteBatchedInserts=true}
    volumes:
      - ./run/cafienne/journal:/opt/cafienne/journal
      - ./run/cafienne/logs:/opt/cafienne/logs
      - ./src/bootstrap:/opt/cafienne/bootstrap
      - ./src/jdbc-conf:/opt/cafienne/conf
      - ./target/definitions:/opt/cafienne/definitions
    depends_on:
      - cafienne-event-db
      - cafienne-query-db
      - idp
      - mailcatcher

volumes:
  postgres-event-db-data:
    driver: local
  postgres-query-db-data:
    driver: local
  dex:
    driver: local
networks:
  dev:
    driver: bridge
